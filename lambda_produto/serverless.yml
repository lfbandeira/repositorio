service: lambda-produto
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage,'dev'}
  region: ${opt:region, 'sa-east-1'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:PutItem
        - dynamodb:DeleteItem
        - dynamodb:GetItem
      Resource: arn:aws:dynamodb:sa-east-1:525067616189:table/PRODUTO
      

  memorySize: 128
  timeout: 3  
functions:
  listarTodos:
    handler: handler.listarTodos
    events:
      - httpApi:
         path: /lista/{cpf_cnpj}
         method: get
  listaPorId:
    handler: handler.listaPorId
    events:
      - httpApi:
         path: /listaporid/{cpf_cnpj}/{idProduto}
         method: get
 
  consultaPaginada:
    handler: handler.consultaPaginada
    events:
      - httpApi:
         path: /consultaPaginada
         method: post

  buscaContagem:
    handler: handler.buscaContagem
    events:
      - httpApi:
         path: /buscaContagem/{cpf_cnpj}
         method: get       
  cadastrarProduto:
    handler: handler.cadastrarProduto
    events:
      - httpApi:
         path: /cadastrarProduto
         method: post
resources:
  Resources:
    ListaTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: PRODUTO
        AttributeDefinitions:
          - AttributeName: idProduto
            AttributeType: S
          - AttributeName: cpf_cnpj
            AttributeType: S
        KeySchema:
          - AttributeName: cpf_cnpj
            KeyType: HASH
          - AttributeName: idProduto
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1